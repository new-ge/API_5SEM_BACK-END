# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "Sprint-2", "Sprint-3" ]
  pull_request:
    branches: [ "Sprint-2", "Sprint-3" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.4
        ports:
          - 5433:5432
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B clean package --file vision_back/pom.xml
      env:
        DB_URL: ${{ secrets.POSTGRES_URL }}
        DB_USERNAME: ${{ secrets.POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        SONAR_JDBC_URL: ${{ secrets.SONAR_JDBC_URL }}
        SONAR_JDBC_USERNAME: ${{ secrets.SONAR_JDBC_USERNAME }}
        SONAR_JDBC_PASSWORD: ${{ secrets.SONAR_JDBC_PASSWORD }}


    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      with:
        project-directory: vision_back
